name: $(BuildID)

trigger:
  batch: true
  branches:
    include:
    - main
    - dev
  paths:
    exclude:
    - README.md
    - azure-pipelines/git-deploy.yaml

pr: none

variables:
  webappName: nuxt-test-zip-deploy
  websiteUrl: 'https://nuxt-test-zip-deploy.azurewebsites.net'
  buildNo: ${{ variables['Build.BuildId'] }}

  # zip deployment specific vars
  serviceConnectionName: nuxt-test-rg
  startupCommand: npm start

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage:
  displayName: Build and Deploy
  jobs:
  - job: buildJob
    displayName: Build Nuxt and Zip File
    steps:
    - template: templates/build.steps.yaml
    - template: templates/commit-sha.step.yaml

    # Zip Deployment
    # --------------
    # In this scenario Azure DevOps creates a zip package that includes:
    # - `node_modules` directory
    # - `.nuxt` build directory

    # Azure DevOps needs to "archive" the file to make it accessible to
    # downstream jobs and tasks. This zip file is then sent to Azure
    # App Service, which unpacks it and runs the startup command
    # defined at the beginning of this stage: `npm start`
    - task: AzureWebApp@1
      displayName: Zip Deploy to Azure Web App
      inputs:
        package: $(System.DefaultWorkingDirectory)
        deploymentMethod: zipDeploy
        azureSubscription: $(serviceConnectionName)
        appType: webAppLinux
        appName: $(webappName)
        runtimeStack: 'NODE|14-lts'
        startUpCommand: $(startupCommand)
        appSettings: -DEPLOYMENT_TYPE "Zip Deploy" -APP_BUILD_SHA $(commitSha)


  # Confirm Deployment
  # ------------------
  # Run a UI driven test to confirm deployment was successful
- template: templates/confirm.stage.yaml
